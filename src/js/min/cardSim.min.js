const MINRUNS=1,MAXRUNS=1e6;function resizeScreen(){let t=document.getElementById("mainBody").offsetHeight,e=document.body.scrollHeight;document.getElementById("mainBody").style.zoom=t/e*.9,document.getElementById("mainBody").style.zoom=t/e*.9,loadTheme()}function loadTheme(){"dark"==sessionStorage.getItem("theme")&&(document.getElementById("themeTypeSwitch").checked=!0,changeTheme())}var gameLog=[];class SumOfDiceSimulation{constructor(t){this.chipDist=t.get("chipsPlaced"),this.numRuns=t.get("numRuns"),this.chipsPerRun=t.get("reqChips"),this.rolls=Array(this.numRuns);for(let e=0;e<this.numRuns;e++)this.rolls[e]=0;this.maxRolls=0,this.minRolls=0,this.totalRolls=0,this.averageRolls=0,this.medianRolls=0,this.simulate()}simulate(){let t,e;for(let i=0;i<this.numRuns;i++){let l=0,n=this.chipDist.slice();for(;l!=this.chipsPerRun;)t=Math.floor(6*Math.random())+1,e=Math.floor(6*Math.random())+1,this.rolls[i]+=1,n[t+e-2]>0&&(n[t+e-2]-=1,l+=1);this.rolls[i]>this.maxRolls&&(this.maxRolls=this.rolls[i]),(this.rolls[i]<this.minRolls||0==i)&&(this.minRolls=this.rolls[i]),this.totalRolls+=this.rolls[i]}this.averageRolls=this.totalRolls/this.numRuns}getMaxRolls(){return this.maxRolls}getMinRolls(){return this.minRolls}getTotalRolls(){return this.totalRolls}getAverageRolls(){return this.averageRolls}getMedianRolls(){return this.medianRolls}}const simConf=new Map;simConf.set("chipsPlaced",[0,0,0,0,0,0,0,0,0,0,0]),simConf.set("totalChipsPlaced",0),simConf.set("reqChips",10),simConf.set("numRuns",100);const distributions=new Map;let chartedDistributions=[];var distCounter=0;const stats=new Map;function updateSimulateButton(){simConf.get("totalChipsPlaced")==simConf.get("reqChips")&&data.includes(0)?(document.getElementById("simBtn").disabled=!1,document.getElementById("saveButton").disabled=!1,document.getElementById("infoText").innerHTML="Ready to Simulate!"):(document.getElementById("simBtn").disabled=!0,document.getElementById("saveButton").disabled=!0,data.includes(0)?document.getElementById("infoText").innerHTML="Finish Placing all 10 chips to run a simulation.":document.getElementById("infoText").innerHTML="Table and chart are full! Clear stats to continue simulating."),updateCardColors()}function updateCardColors(){for(let t=0;t<11;t++)simConf.get("chipsPlaced")[t]>0?(document.getElementById(`card${t+2}`).classList.remove("bg-secondary"),document.getElementById(`card${t+2}`).classList.add("bg-success")):document.getElementById(`card${t+2}`).classList.contains("bg-success")&&(document.getElementById(`card${t+2}`).classList.remove("bg-success"),document.getElementById(`card${t+2}`).classList.add("bg-secondary"))}function removeChips(t){let e=Number(t.parentElement.parentElement.id.split("d")[1])-2,i=Number(t.innerHTML.split("-")[1]);(currChips=simConf.get("chipsPlaced")[e])-i>=0&&(simConf.get("chipsPlaced")[e]=currChips-i,tot=simConf.get("totalChipsPlaced"),tot-=i,simConf.set("totalChipsPlaced",tot),document.getElementById(`card${e+2}label`).innerHTML=currChips-i,updateRemainingChips(simConf.get("reqChips")-simConf.get("totalChipsPlaced")),updateSimulateButton())}function addChips(t){let e=Number(t.parentElement.parentElement.id.split("d")[1])-2,i=Number(t.innerHTML.split("+")[1]);currChips=simConf.get("chipsPlaced")[e],simConf.get("totalChipsPlaced")+i<=10&&(simConf.get("chipsPlaced")[e]=currChips+i,tot=simConf.get("totalChipsPlaced"),tot+=i,simConf.set("totalChipsPlaced",tot),document.getElementById(`card${e+2}label`).innerHTML=currChips+i,updateRemainingChips(simConf.get("reqChips")-simConf.get("totalChipsPlaced")),updateSimulateButton())}function clearChips(){for(let t=0;t<10;t++)document.getElementById(`card${t+2}label`).innerHTML="0",simConf.get("chipsPlaced")[t]=0;simConf.set("totalChipsPlaced",0),updateRemainingChips(10),updateSimulateButton()}function updateRemainingChips(t){document.getElementById("RemainingChipsLabel").innerHTML=`Remaining Chips: ${t}`}function updateRuns(t){let e=t.id,i=Number(document.getElementById(e).value);i>=1&&i<=1e6?(simConf.set("numRuns",i),document.getElementById("invRunsText").hidden=!0):(document.getElementById("invRunsText").hidden=!1,document.getElementById("invRunsText").innerHTML="Number must be between 1 and 1000000")}stats.set("averages",[]),stats.set("mins",[]),stats.set("maxes",[]);var barCount=0;function simulate(){let t=document.getElementById("simBtn");t.disabled=!0,updateLogs((sim=new SumOfDiceSimulation(simConf)).getMinRolls(),sim.getMaxRolls(),sim.getAverageRolls(),sim.getTotalRolls()),data[barCount]=sim.getAverageRolls(),barCount+=1,sim=null,updateChart();let e=[];for(let i=0;i<11;i++)e[i]=simConf.get("chipsPlaced")[i];chartedDistributions.push(e),t.disabled=!1,updateSimulateButton()}function switchDistribution(t){let e=document.getElementById("distDropdown"),i=e.innerHTML,l=t.innerHTML;e.innerHTML=l,t.innerHTML=i,0==Number(l.split(" ")[1])?document.getElementById("saveButton").innerHTML="Save Distribution":document.getElementById("saveButton").innerHTML="Overwrite Distribution",loadDistribution(l)}function loadDistribution(t){let e=Number(t.split(" ")[1]);if(isNaN(e))document.getElementById("delButton").disabled=!0,document.getElementById("saveButton").innerHTML="Save New Distribution";else{let i=distributions.get(`Distribution${e}`);for(let l=0;l<11;l++)document.getElementById(`card${l+2}label`).innerHTML=i[l],simConf.get("chipsPlaced")[l]=i[l];simConf.set("totalChipsPlaced",10),updateRemainingChips(0),updateSimulateButton(),document.getElementById("delButton").disabled=!1}}function saveDistribution(){let t=document.getElementById("distDropdown").innerHTML.replace(/\s/g,"");if("DistributionSelection"==t){t=`Distribution${distCounter+1}`,distributions.set(t,[0,0,0,0,0,0,0,0,0,0,0]);for(let e=0;e<11;e++)distributions.get(t)[e]=simConf.get("chipsPlaced")[e];dropdownList=document.getElementById("dropdownList"),(newDistribution=document.createElement("li")).innerHTML=`<p class="dropdown-item" id="d${distCounter+1}" onclick="switchDistribution(this);">Distribution ${distCounter+1}</p> `,dropdownList.appendChild(newDistribution),distCounter+=1}else{t.split("t")[1];for(let i=0;i<11;i++)distributions.get(t)[i]=simConf.get("chipsPlaced")[i]}}function deleteDistribution(){0!=(distNo=Number(document.getElementById("distDropdown").innerHTML.split(" ")[1]))&&(document.getElementById(`d${distNo}`).remove(),document.getElementById("distDropdown").innerHTML="Distribution Selection"),document.getElementById("delButton").disabled=!0,document.getElementById("saveButton").innerHTML="Save New Distribution"}function randomPlacement(){for(let t=2;t<13;t++)document.getElementById(`card${t}label`).innerHTML="0",simConf.get("chipsPlaced")[t-2]=0;let e=0;for(;e<simConf.get("reqChips");){let i=Math.ceil(Math.random()*(simConf.get("reqChips")-e/2)),l=Math.floor(10*Math.random())+2;e+i>simConf.get("reqChips")&&(i=simConf.get("reqChips")-e),document.getElementById(`card${l}label`).innerHTML=i+Number(document.getElementById(`card${l}label`).innerHTML),simConf.get("chipsPlaced")[l-2]=Number(document.getElementById(`card${l}label`).innerHTML),e+=i}simConf.set("totalChipsPlaced",10),updateRemainingChips(0),updateSimulateButton()}function updateLogs(t,e,i,l){gameLog[lastIdx=gameLog.length-1]=[,,,,],gameLog[lastIdx][0]=t,gameLog[lastIdx][1]=e,gameLog[lastIdx][2]=i,gameLog[lastIdx][3]=l;let n="";for(let s=0;s<11;s++)n+=simConf.get("chipsPlaced")[s],n+=" ";let a=`
      <td class="table-cell themeable">${barCount+1}</td>

      <td class="table-cell themeable">${gameLog[lastIdx][0]}</td>

      <td class="table-cell themeable">${gameLog[lastIdx][1]}</td>

      <td class="table-cell themeable">${gameLog[lastIdx][2]}</td>

      <td class="table-cell themeable">${gameLog[lastIdx][3]}</td>

      <td class="table-cell themeable">${simConf.get("numRuns")}</td>

      <td class="table-cell themeable">${n}</td>

  `;document.getElementById("rollDataTable").getElementsByTagName("tbody")[0].insertRow(-1).innerHTML=a,document.getElementById("themeTypeSwitch").checked&&document.querySelectorAll("td").forEach(t=>t.classList.add("text-white"))}function clearTable(){document.getElementById("rollDataTable").getElementsByTagName("tbody")[0].innerHTML=""}var data=[0,0,0,0,0,0,0,0,0,0];function clearChart(){data=[0,0,0,0,0,0,0,0,0,0],barCount=0,chartedDistributions=[],updateChart()}function clearStats(){clearTable(),clearChart(),updateSimulateButton()}function updateChart(){let t={top:20,right:20,bottom:30,left:40},e=500-t.left-t.right,i=300-t.top-t.bottom,l=d3.select("svg");l.selectAll("*").remove();let n=l.append("g").attr("transform",`translate(${t.left}, ${t.top})`),s=d3.scaleBand().domain(data.map((t,e)=>e+1)).range([0,e]).padding(.1),a=d3.max(data),o=d3.scaleLinear().domain([0,a>0?a:1]).range([i,0]),d=d3.axisBottom(s),r=d3.axisLeft(o);n.append("g").attr("transform",`translate(0, ${i})`).call(d),n.append("g").call(r),n.selectAll(".bar").data(data).enter().append("rect").attr("class","bar").attr("x",(t,e)=>s(e+1)).attr("y",t=>o(t)).attr("width",s.bandwidth()).attr("height",t=>i-o(t)).attr("fill","#6495ED").on("mouseover",function(){d3.select(this).transition().duration("50").attr("opacity",".85");let t=Math.floor(d3.select(this).attr("x")/43.5),e=document.getElementById("hoverDistribution");e.hidden=!1,document.getElementById("hoverLabel").hidden=!1;let i="[ ";for(let l=0;l<11;l++)i+=`${chartedDistributions[t][l]} `;i+="]",e.innerHTML=i}).on("click",function(){let t=Math.floor(d3.select(this).attr("x")/43.5);if(chartedDistributions.length>0){for(let e=0;e<11;e++)document.getElementById(`card${e+2}label`).innerHTML=chartedDistributions[t][e],simConf.get("chipsPlaced")[e]=chartedDistributions[t][e];simConf.set("totalChipsPlaced",10),updateRemainingChips(0),updateSimulateButton()}}).on("mouseout",function(){d3.select(this).transition().duration("50").attr("opacity","1");let t=document.getElementById("hoverDistribution"),e="[";for(let i=0;i<11;i++)e+="- ";e+="]",t.innerHTML=e,t.hidden=!0,document.getElementById("hoverLabel").hidden=!0}),n.append("text").attr("class","x label").attr("text-anchor","middle").attr("x",e/2).attr("y",i+t.bottom).text("Simulation Number"),n.append("text").attr("class","y label").attr("text-anchor","middle").attr("x",-i/2).attr("y",-t.left+13).attr("transform","rotate(-90)").text("Average Rolls"),document.getElementById("themeTypeSwitch").checked?n.selectAll("text").attr("fill","#ffffff"):n.selectAll("text").attr("fill","#000000")}function changeTheme(){document.getElementById("themeTypeSwitch").checked?document.getElementById("themeTypeSwitch").checked&&(document.body.style.backgroundColor="#434445",document.querySelectorAll(".themeable").forEach(t=>t.classList.add("text-white")),document.querySelectorAll(".modal-content, .list-group-item-action").forEach(t=>t.classList.add("bg-dark")),updateChart(),sessionStorage.setItem("theme","dark")):(document.body.style.backgroundColor="#ffffff",document.querySelectorAll(".themeable").forEach(t=>t.classList.remove("text-white")),document.querySelectorAll(".modal-content, .list-group-item").forEach(t=>t.classList.remove("bg-dark")),updateChart(),sessionStorage.setItem("theme","light"))}