const baseTotal = 27, AUDIO_ROLL = new Audio("../sounds/dice_roll.mp3"), AUDIO_WRONG = new Audio("../sounds/wrong.mp3"), AUDIO_CORRECT = new Audio("../sounds/point_2.mp3"), Graphics = PIXI.Graphics, Sprite = PIXI.Sprite, delay = 1e4; class Line { #a; constructor(e, t) { this.#a = new Graphics, this.#a.beginFill("0x000000"), this.#a.drawRect(e + t, 0, 5, 5e3), this.#a.endFill() } getLine() { return this.#a } } class Coin { #b; #c; constructor(e, t, i) { this.#b = 0, this.#c = new Graphics, this.#d(e, t, i) } getState() { return this.#b } getCoin() { return this.#c } setState(e) { (0 == e || 1 == e) && (this.#b = e) } setInteractive(e) { 1 == e ? this.#c.interactive = !0 : 0 == e && (this.#c.interactive = !1) } #d(e, t, i) { this.#c.beginFill("0xFFD700"), this.#c.lineStyle(1, "0x000000", 1), this.#c.drawCircle(e, t, i), this.#c.interactive = !1, this.#c.buttonMode = !0, this.#c.on("pointerdown", () => this.#e()).on("pointerdown", () => this.#f()).on("pointerover", () => this.#g()).on("pointerout", () => this.#h()), this.#c.endFill() } #e() { 0 == game.getGameState() && (0 == this.#b ? (this.mark(), game.setNumberClicked(1)) : (this.unmark(), game.setNumberClicked(-1))) } mark() { this.#c.tint = 7900400, this.#b = 1 } unmark() { this.#c.tint = 16777215, this.#b = 0 } #f() { 1 == game.getGameState() && (game.getApp().stage.removeChild(this.#c), game.updateScore()) } #g() { this.#c.alpha = .5 } #h() { this.#c.alpha = 1 } } class WindowInfo { #i; #j; constructor() { this.#i = .98 * window.innerWidth, this.#j = window.innerHeight } getWindowWidth() { return this.#i } getWindowHeight() { return this.#j } } class App { #k; #l; constructor(e, t) { this.#k = this.#m(e), this.#l = t } #m(n) { return new PIXI.Application({ backgroundAlpha: 0, width: n.getWindowWidth(), height: .15 * n.getWindowHeight() }) } appendApp() { document.getElementById(this.#l).appendChild(this.#k.view) } getApp() { return this.#k } } class Dice27 { #n; #k; #o; #p; #q; #r; #s = []; #t = []; #u = []; #v = [0, 0]; #w = 0; #x = 0; #y = 0; #z = 27; #A; constructor() { this.#n = new WindowInfo, this.#k = new App(this.#n, "app"), this.#o = new App(this.#n, "diceApp"), this.#A = 0, this.#o.getApp().loader.baseUrl = "../images/", this.#o.getApp().loader.add("dice0", "dice0.png").add("dice1", "dice1.png").add("dice2", "dice2.png").add("dice3", "dice3.png").add("dice4", "dice4.png").add("dice5", "dice5.png").add("dice6", "dice6.png"), this.#o.getApp().loader.load(), document.getElementById("overalScore").innerHTML = this.#z, document.getElementById("player0").innerHTML = this.#v[0], document.getElementById("player1").innerHTML = this.#v[1], this.#s = Array(27).fill(0), this.#B() } #B() { let r = document.getElementById("rollButton"), s = document.getElementById("createGame"), o = document.getElementById("resetButton"), l = document.getElementById("questionInput"), a = document.getElementById("questionSubmit"), d = document.getElementById("makeAuto"), h = document.getElementById("makeSubmit"); r.addEventListener("click", () => { this.#C() }), s.addEventListener("click", () => { this.#D() }), o.addEventListener("click", () => { this.#E() }), l.addEventListener("keypress", e => { "Enter" == e.key && this.#F() }), a.addEventListener("click", () => { this.#F() }), d.addEventListener("click", () => { this.#G() }), h.addEventListener("click", () => { this.#y == this.#p ? (this.#H(AUDIO_CORRECT), this.#I()) : (this.#H(AUDIO_WRONG), document.getElementById("mainPrompt").textContent = "You did not select a group of " + this.#p + ". Try Again") }) } getApp() { return this.#k.getApp() } getGameState() { return this.#q } setNumberClicked(e) { this.#y = this.#y + e } #D() { document.getElementById("title").hidden = !0; let p = .025 * this.#n.getWindowWidth(), c = .036 * this.#n.getWindowWidth(), u = .016 * this.#n.getWindowWidth(), m = .07 * this.#n.getWindowHeight(); document.getElementById("title").hidden = !0, document.getElementById("mainPrompt").textContent = "Player 1 Roll", document.getElementById("mainPrompt").style = "color:#dc143c;", this.#k.appendApp(), this.#o.appendApp(); for (let g = 0; g < this.#z; g++)this.#u[g] = new Coin(p, m, u), this.#t[g] = new Line(p, u), this.#k.getApp().stage.addChild(this.#u[g].getCoin()), p += c; this.#r = new Sprite.from(this.#o.getApp().loader.resources.dice0.texture), this.#r.x = this.#n.getWindowWidth() / 2 - this.#r.width / 2, this.#o.getApp().stage.addChild(this.#r), document.getElementById("createGame").hidden = !0, document.getElementById("rollButton").hidden = !1 } #C() { document.getElementById("rollButton").hidden = !0, this.#H(AUDIO_ROLL); let y = 0; this.#o.getApp().ticker.add(() => { if (y % 5 == 0 && y < 50) this.#p = (Math.floor(600 * Math.random()) + 1) % 6 + 1, this.#r.texture = this.#o.getApp().loader.resources[`dice${this.#p}`].texture; else if (50 == y) { document.getElementById("mainPrompt").textContent = "Player " + (this.#A + 1) + " Answer", document.getElementById("questionCard").hidden = !1, document.getElementById("questionText").innerHTML = "Create groups of <strong>" + this.#p + "</strong> by selecting the chips above. Press submit once a group is made.", document.getElementById("makeButtons").hidden = !1, this.#q = 0; for (let e = 0; e < this.#z; e++)this.#u[e].setInteractive(1); y++ } y++ }), this.#w++ } #F() { 0 == questionInput.getAttribute("data-value") ? this.#J() : this.#K() } #J() { document.getElementById("questionInput").value == this.#x ? (this.#H(AUDIO_CORRECT), document.getElementById("questionInput").value = "", document.getElementById("questionInput").focus(), document.getElementById("questionText").innerHTML = "How many chips are remaining?", document.getElementById("questionInput").setAttribute("data-value", 1), document.getElementById("mainPrompt").textContent = "Player " + (this.#A + 1) + " Answer") : (document.getElementById("questionInput").click(), document.getElementById("mainPrompt").textContent = "Try again. Enter the correct number.") } #K() { let $ = document.getElementById("questionInput").value, I = this.#z % this.#p; if ($ == I) { if (this.#H(AUDIO_CORRECT), I > 0) { this.#q = 1; for (let E = 0; E < I; E++)this.#u[this.#z - E - 1].setInteractive(1), document.getElementById("questionCard").hidden = !0, document.getElementById("questionText").innerHTML = "How many groups <strong>" + this.#p + "</strong> of did you create? ", document.getElementById("mainPrompt").textContent = "Player " + (this.#A + 1) + " Remove your Chips" } else this.#L(); document.getElementById("questionInput").value = "", document.getElementById("questionInput").setAttribute("data-value", 0), document.getElementById("questionInputGroup").hidden = !0, this.#s[this.#z]++ } else this.#H(AUDIO_WRONG), document.getElementById("questionInput").click(), document.getElementById("mainPrompt").textContent = "Try again. Enter the correct number." } updateScore() { this.#z--, this.#v[this.#A]++, document.getElementById("overalScore").innerHTML = this.#z, document.getElementById("player" + this.#A).innerHTML = this.#v[this.#A], 0 == this.#z ? (document.getElementById("app").removeChild(this.#k.getApp().view), document.getElementById("diceApp").removeChild(this.#o.getApp().view), document.getElementById("rollButton").hidden = !0, document.getElementById("mainPrompt").hidden = !0, this.#v[0] > this.#v[1] ? document.getElementById("overalScore").innerHTML = "Player 1 Wins!" : document.getElementById("overalScore").innerHTML = "Player 2 Wins!", document.getElementById("resetButton").hidden = !1, document.getElementById("graph").hidden = !1, this.#M()) : this.#z == this.#x * this.#p && this.#L() } #L() { 0 == this.#A ? this.#A = 1 : this.#A = 0, 0 == this.#A ? document.getElementById("mainPrompt").style = "color:#dc143c;" : document.getElementById("mainPrompt").style = "color:#4206c5;", this.#r.texture = this.#o.getApp().loader.resources.dice0.texture, this.#x = 0, this.#N(), this.#O(), document.getElementById("questionCard").hidden = !0, document.getElementById("mainPrompt").textContent = "Player " + (this.#A + 1) + " Roll", document.getElementById("rollButton").hidden = !1 } #I() { this.#N(); let B = this.#x * this.#p; for (let A = B; A < B + this.#p; A++)this.#u[A].mark(), this.#u[A].setInteractive(0); if (this.#k.getApp().stage.addChild(this.#t[B + this.#p - 1].getLine()), this.#x++, this.#y = 0, this.#x == Math.floor(this.#z / this.#p)) { for (let w = B; w < this.#z; w++)this.#u[w].setInteractive(0); document.getElementById("makeButtons").hidden = !0, document.getElementById("questionInputGroup").hidden = !1, document.getElementById("questionText").innerHTML = "How many groups <strong>" + this.#p + "</strong> of did you create? ", document.getElementById("mainPrompt").textContent = "Player " + (this.#A + 1) + " Answer", document.getElementById("questionInput").focus() } else document.getElementById("mainPrompt").textContent = "Good Job! Create Another Group" } #G() { this.#z < this.#p && (document.getElementById("makeButtons").hidden = !0, document.getElementById("questionInputGroup").hidden = !1, document.getElementById("questionText").innerHTML = "How many groups of <strong>" + this.#p + "</strong> did you create?", document.getElementById("mainPrompt").textContent = "Player " + (this.#A + 1) + " Answer", document.getElementById("questionInput").focus()); let C = Math.floor(this.#z / this.#p); for (; this.#x != C;)this.#I() } #N() { for (let b = this.#x * this.#p; b < this.#z; b++)this.#u[b].unmark() } #O() { for (let v = 0; v < 27; v++)this.#k.getApp().stage.removeChild(this.#t[v].getLine()) } #E() { this.#z = 27, this.#v[0] = 0, this.#v[1] = 0, this.#A = 0, document.getElementById("resetButton").hidden = !0, document.getElementById("rollButton").hidden = !1, document.getElementById("overalScore").innerHTML = this.#z, document.getElementById("player0").innerHTML = this.#v[0], document.getElementById("player1").innerHTML = this.#v[1], document.getElementById("graph").hidden = !0, document.getElementById("mainPrompt").textContent = "Player 1 Roll", document.getElementById("mainPrompt").hidden = !1, this.#k.appendApp(), this.#o.appendApp(); for (let _ = 0; _ < this.#z; _++)this.#k.getApp().stage.addChild(this.#u[_].getCoin()), this.#s[_] = 0; this.#r.texture = this.#o.getApp().loader.resources.dice0.texture } #M() { document.getElementById("graph").hidden = !1, document.getElementById("numberRolls").innerHTML = this.#w; let T = { top: 20, right: 20, bottom: 30, left: 40 }, f = 960 - T.left - T.right, k = 500 - T.top - T.bottom, L = d3.select("svg"); L.selectAll("*").remove(); let P = L.append("g").attr("transform", `translate(${T.left}, ${T.top})`), x = d3.scaleBand().domain(this.#s.map((e, t) => t)).range([0, f]).padding(.1), S = d3.scaleLinear().domain([0, d3.max(this.#s)]).range([k, 0]), q = d3.axisBottom(x), H = d3.axisLeft(S); P.append("g").attr("transform", `translate(0, ${k})`).call(q), P.append("g").call(H), P.selectAll(".bar").data(this.#s).enter().append("rect").attr("class", "bar").attr("x", (e, t) => x(t)).attr("y", e => S(e)).attr("width", x.bandwidth()).attr("height", e => k - S(e)) } #H(R) { R.pause(), R.currentTime = 0, R.play() } } class ScreenManagement { #P; #Q; constructor() { this.#P = document.getElementById("themeTypeSwitch"), this.#Q = document.getElementById("volume-control"); "dark" == sessionStorage.getItem("theme") && (document.getElementById("themeTypeSwitch").checked = !0, this.#R()), this.#S() } #S() { this.#P.addEventListener("click", () => { this.#R() }), this.#Q.addEventListener("input", () => { this.#T() }) } #T() { AUDIO_CORRECT.volume = this.#Q.currentTarget.value / 100, AUDIO_WRONG.volume = this.#Q.currentTarget.value / 100, AUDIO_ROLL.volume = this.#Q.currentTarget.value / 100 } #R() { let W = document.querySelectorAll(".text"), O = document.querySelectorAll(".gameCard"), G = document.querySelectorAll(".menu"); if (this.#P.checked) { document.body.style.backgroundColor = "#343a40"; for (let M = 0; M < W.length; M++)W[M].style.color = "white"; for (let V = 0; V < O.length; V++)O[V].style.backgroundColor = "#6C757D"; for (let D = 0; D < G.length; D++)G[D].style.backgroundColor = "#343a40"; sessionStorage.setItem("theme", "dark") } else { document.body.style.backgroundColor = "#ffffff"; for (let U = 0; U < W.length; U++)W[U].style.color = "black"; for (let F = 0; F < O.length; F++)O[F].style.backgroundColor = "white"; for (let N = 0; N < G.length; N++)G[N].style.backgroundColor = "#ffffff"; sessionStorage.setItem("theme", "light") } } } const game = new Dice27, screen = new ScreenManagement;